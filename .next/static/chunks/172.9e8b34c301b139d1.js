"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[172],{21919:function(t,r,e){e.d(r,{C:function(){return p},G:function(){return h},a:function(){return l},b:function(){return u},d:function(){return c},h:function(){return i}});var a=e(99612),n=e(23437),o=e(61744),s=e(40721);function c(t,r){return(0,a.ai)(t.abi,r,t.extensions)}function i(t,r){return t in r.readContract.functions}class p{featureName=a.cJ.name;constructor(t,r,e){this.contractWrapper=t,this.schema=r,this.storage=e}parseOutputMetadata(t){return this.schema.output.parseAsync(t)}parseInputMetadata(t){return this.schema.input.parseAsync(t)}async get(){let t;if(this.supportsContractMetadata(this.contractWrapper)){const r=await this.contractWrapper.read("contractURI",[]);r&&r.includes("://")&&(t=await this.storage.downloadJSON(r))}if(!t)try{let e,n,o;try{i("name",this.contractWrapper)&&(e=await this.contractWrapper.read("name",[]))}catch(r){}try{i("symbol",this.contractWrapper)&&(n=await this.contractWrapper.read("symbol",[]))}catch(r){}try{o=await(0,a.K)(this.contractWrapper.address,this.contractWrapper.getProvider(),this.storage,this.contractWrapper.options)}catch(r){}t={name:e||o?.name,symbol:n,description:o?.info.title}}catch(e){throw new Error("Could not fetch contract metadata")}return this.parseOutputMetadata(t)}set=(0,n.f)((async t=>{const r=await this._parseAndUploadMetadata(t),e=this.contractWrapper;if(this.supportsContractMetadata(e))return n.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setContractURI",args:[r],parse:t=>({receipt:t,data:this.get})});throw new a.x(a.cJ)}));update=(0,n.f)((async t=>await this.set.prepare({...await this.get(),...t})));async _parseAndUploadMetadata(t){const r=await this.parseInputMetadata(t);return this.storage.upload(r)}supportsContractMetadata(t){return c(t,"ContractMetadata")}}class l{constructor(t){this.contractWrapper=t}addTransactionListener(t){this.contractWrapper.addListener(a.aZ.Transaction,t)}removeTransactionListener(t){this.contractWrapper.off(a.aZ.Transaction,t)}addEventListener(t,r){const e=this.contractWrapper.readContract.interface.getEvent(t),a={address:this.contractWrapper.address,topics:[this.contractWrapper.readContract.interface.getEventTopic(e)]},n=t=>{const e=this.contractWrapper.readContract.interface.parseLog(t);r(this.toContractEvent(e.eventFragment,e.args,t))};return this.contractWrapper.getProvider().on(a,n),()=>{this.contractWrapper.getProvider().off(a,n)}}listenToAllEvents(t){const r={address:this.contractWrapper.address},e=r=>{try{const e=this.contractWrapper.readContract.interface.parseLog(r);t(this.toContractEvent(e.eventFragment,e.args,r))}catch(e){console.error("Could not parse event:",r,e)}};return this.contractWrapper.getProvider().on(r,e),()=>{this.contractWrapper.getProvider().off(r,e)}}removeEventListener(t,r){const e=this.contractWrapper.readContract.interface.getEvent(t);this.contractWrapper.readContract.off(e.name,r)}removeAllListeners(){this.contractWrapper.readContract.removeAllListeners();const t={address:this.contractWrapper.address};this.contractWrapper.getProvider().removeAllListeners(t)}async getAllEvents(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{fromBlock:0,toBlock:"latest",order:"desc"};const r=(await this.contractWrapper.readContract.queryFilter({},t.fromBlock,t.toBlock)).sort(((r,e)=>"desc"===t.order?e.blockNumber-r.blockNumber:r.blockNumber-e.blockNumber));return this.parseEvents(r)}async getEvents(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{fromBlock:0,toBlock:"latest",order:"desc"};const e=this.contractWrapper.readContract.interface.getEvent(t),a=r.filters?e.inputs.map((t=>r.filters[t.name])):[],n=this.contractWrapper.readContract.filters[e.name](...a),o=(await this.contractWrapper.readContract.queryFilter(n,r.fromBlock,r.toBlock)).sort(((t,e)=>"desc"===r.order?e.blockNumber-t.blockNumber:t.blockNumber-e.blockNumber));return this.parseEvents(o)}parseEvents(t){return t.map((t=>{const r=Object.fromEntries(Object.entries(t).filter((t=>"function"!==typeof t[1]&&"args"!==t[0])));if(t.args){const e=Object.entries(t.args),a=e.slice(e.length/2,e.length),n={};for(const[t,r]of a)n[t]=r;return{eventName:t.event||"",data:n,transaction:r}}return{eventName:t.event||"",data:{},transaction:r}}))}toContractEvent(t,r,e){const a=Object.fromEntries(Object.entries(e).filter((t=>"function"!==typeof t[1]&&"args"!==t[0]))),n={};return t.inputs.forEach(((t,e)=>{if(Array.isArray(r[e])){const a=t.components;if(a){const o=r[e];if("tuple[]"===t.type){const r=[];for(let t=0;t<o.length;t++){const e=o[t],n={};for(let t=0;t<a.length;t++){n[a[t].name]=e[t]}r.push(n)}n[t.name]=r}else{const r={};for(let t=0;t<a.length;t++){r[a[t].name]=o[t]}n[t.name]=r}}}else n[t.name]=r[e]})),{eventName:t.name,data:n,transaction:a}}}class h{constructor(t){this.contractWrapper=t}async gasCostOf(t,r){const e=await(0,n.c)(this.contractWrapper.getProvider(),await this.contractWrapper.populateTransaction(t,r));return a=e,o.formatEther(a);var a}async gasLimitOf(t,r){return this.contractWrapper.estimateGas(t,r)}async currentGasPriceInGwei(){const t=await this.contractWrapper.getProvider().getGasPrice();return o.formatUnits(t,"gwei")}}class u{featureName=a.cK.name;constructor(t,r,e){this.contractWrapper=t,this.metadata=r,this.storage=e}async get(){return c(this.contractWrapper,"AppURI")?await this.contractWrapper.read("appURI",[]):(0,s.ov)((await this.metadata.get()).app_uri||"",this.storage.getGatewayUrls())}set=(0,n.f)((async t=>c(this.contractWrapper,"AppURI")?n.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAppURI",args:[t]}):await this.metadata.update.prepare({app_uri:t})))}},82123:function(t,r,e){e.d(r,{C:function(){return i}});var a=e(38776),n=e(99612),o=e(21919),s=e(23437),c=e(43277);class i{featureName=n.d4.name;constructor(t,r){this.contractWrapper=t,this.roles=r}async getAll(){(0,a.Z)(this.roles.length,"this contract has no support for roles");const t={},r=Object.entries(this.roles);return(await Promise.all(r.map((t=>{let[,r]=t;return this.get(r)})))).forEach(((e,a)=>t[r[a][1]]=e)),t}async get(t){(0,a.Z)(this.roles.includes(t),`this contract does not support the "${t}" role`);const r=this.contractWrapper;if((0,o.h)("getRoleMemberCount",r)&&(0,o.h)("getRoleMember",r)){const e=(0,n.H)(t),a=(await r.read("getRoleMemberCount",[e])).toNumber();return await Promise.all(Array.from(Array(a).keys()).map((t=>r.read("getRoleMember",[e,t]))))}throw new Error("Contract does not support enumerating roles. Please implement IPermissionsEnumerable to unlock this functionality.")}setAll=(0,s.f)((async(t,r)=>{const e=r||await this.contractWrapper.getSignerAddress(),o=new c.C(this.contractWrapper),i=Object.keys(t);(0,a.Z)(i.length,"you must provide at least one role to set"),(0,a.Z)(i.every((t=>this.roles.includes(t))),"this contract does not support the given role");const p=await this.getAll(),l=[],h=i.sort((t=>"admin"===t?1:-1));for(let a=0;a<h.length;a++){const r=h[a],[s,c]=await Promise.all([Promise.all(t[r]?.map((t=>(0,n.aL)(t)))||[]),Promise.all(p[r]?.map((t=>(0,n.aL)(t)))||[])]),i=s.filter((t=>!c.includes(t))),u=c.filter((t=>!s.includes(t)));if(u.length>1){const t=u.indexOf(e);t>-1&&(u.splice(t,1),u.push(e))}if(i.length&&i.forEach((t=>{l.push(o.encode("grantRole",[(0,n.H)(r),t]))})),u.length){(await Promise.all(u.map((t=>this.getRevokeRoleFunctionName(t))))).forEach(((t,e)=>l.push(o.encode(t,[(0,n.H)(r),u[e]]))))}}return s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[l]})}));async verify(t,r){await Promise.all(t.map((async t=>{const[e,a]=await Promise.all([this.get(t),(0,n.aL)(r)]);if(!e.map((t=>t.toLowerCase())).includes(a.toLowerCase()))throw new n.o(a,t)})))}grant=(0,s.f)((async(t,r)=>{(0,a.Z)(this.roles.includes(t),`this contract does not support the "${t}" role`);const e=await(0,n.aL)(r);return s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"grantRole",args:[(0,n.H)(t),e]})}));revoke=(0,s.f)((async(t,r)=>{(0,a.Z)(this.roles.includes(t),`this contract does not support the "${t}" role`);const e=await(0,n.aL)(r),o=await this.getRevokeRoleFunctionName(e);return s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:o,args:[(0,n.H)(t),e]})}));async getRevokeRoleFunctionName(t){const[r,e]=await Promise.all([(0,n.aL)(t),this.contractWrapper.getSignerAddress()]);return e.toLowerCase()===r.toLowerCase()?"renounceRole":"revokeRole"}}}}]);