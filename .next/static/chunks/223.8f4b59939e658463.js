"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[223],{99042:function(t,e,n){n.d(e,{W:function(){return r}});var s=n(22555),i=n(14848);class r extends i.Z{constructor(t){let{chains:e=s.gL9,options:n}=t;super(),this.chains=e,this.options=n}getBlockExplorerUrls(t){const e=t.explorers?.map((t=>t.url))??[];return e.length>0?e:void 0}isChainUnsupported(t){return!this.chains.some((e=>e.chainId===t))}updateChains(t){this.chains=t}}},70604:function(t,e,n){n.d(e,{A:function(){return c},C:function(){return o},R:function(){return h},S:function(){return d},U:function(){return u},a:function(){return a}});var s=n(28027);class i extends Error{constructor(t,e){const{cause:n,code:s,data:i}=e;if(!Number.isInteger(s))throw new Error('"code" must be an integer.');if(!t||"string"!==typeof t)throw new Error('"message" must be a nonempty string.');super(`${t}. Cause: ${JSON.stringify(n)}`),this.cause=n,this.code=s,this.data=i}}class r extends i{constructor(t,e){const{cause:n,code:s,data:i}=e;if(!(Number.isInteger(s)&&s>=1e3&&s<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(t,{cause:n,code:s,data:i})}}class c extends Error{constructor(){super(...arguments),(0,s._)(this,"name","AddChainError"),(0,s._)(this,"message","Error adding chain")}}class o extends Error{constructor(t){let{chainId:e,connectorId:n}=t;super(`Chain "${e}" not configured for connector "${n}".`),(0,s._)(this,"name","ChainNotConfigured")}}class a extends Error{constructor(){super(...arguments),(0,s._)(this,"name","ConnectorNotFoundError"),(0,s._)(this,"message","Connector not found")}}class h extends i{constructor(t){super("Resource unavailable",{cause:t,code:-32002}),(0,s._)(this,"name","ResourceUnavailable")}}class d extends r{constructor(t){super("Error switching chain",{cause:t,code:4902}),(0,s._)(this,"name","SwitchChainError")}}class u extends r{constructor(t){super("User rejected request",{cause:t,code:4001}),(0,s._)(this,"name","UserRejectedRequestError")}}},53827:function(t,e,n){function s(t){return"string"===typeof t?Number.parseInt(t,"0x"===t.trim().substring(0,2)?16:10):"bigint"===typeof t?Number(t):t}n.d(e,{n:function(){return s}})},70223:function(t,e,n){n.r(e),n.d(e,{CoinbaseWalletConnector:function(){return l}});var s=n(28027),i=n(99042),r=n(70604),c=n(19485),o=n(241),a=n(16441),h=n(83743),d=n(17570),u=n(53827);n(14848);class l extends i.W{constructor(t){let{chains:e,options:n}=t;super({chains:e,options:{reloadOnDisconnect:!1,...n}}),(0,s._)(this,"id",h.w.coinbase),(0,s._)(this,"name","Coinbase Wallet"),(0,s._)(this,"ready",!0),(0,s._)(this,"onAccountsChanged",(t=>{0===t.length?this.emit("disconnect"):this.emit("change",{account:c.getAddress(t[0])})})),(0,s._)(this,"onChainChanged",(t=>{const e=(0,u.n)(t),n=this.isChainUnsupported(e);this.emit("change",{chain:{id:e,unsupported:n}})})),(0,s._)(this,"onDisconnect",(()=>{this.emit("disconnect")}))}async connect(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{const n=await this.getProvider();this.setupListeners(),this.emit("message",{type:"connecting"});const s=await n.enable(),i=c.getAddress(s[0]);let r=await this.getChainId(),a=this.isChainUnsupported(r);if(t&&r!==t)try{r=(await this.switchChain(t)).chainId,a=this.isChainUnsupported(r)}catch(e){console.error(`Connected but failed to switch to desired chain ${t}`,e)}return{account:i,chain:{id:r,unsupported:a},provider:new o.Q(n)}}catch(n){if(/(user closed modal|accounts received is empty)/i.test(n.message))throw new r.U(n);throw n}}async disconnect(){if(!this._provider)return;const t=await this.getProvider();t.removeListener("accountsChanged",this.onAccountsChanged),t.removeListener("chainChanged",this.onChainChanged),t.removeListener("disconnect",this.onDisconnect),t.disconnect(),t.close()}async getAccount(){const t=await this.getProvider(),e=await t.request({method:"eth_accounts"});if(0===e.length)throw new Error("No accounts found");return c.getAddress(e[0])}async getChainId(){const t=await this.getProvider();return(0,u.n)(t.chainId)}async getProvider(){if(!this._provider){let t=(await Promise.all([n.e(5500),n.e(5811),n.e(4726)]).then(n.bind(n,45811))).default;"function"!==typeof t&&"function"===typeof t.default&&(t=t.default),this._client=new t(this.options);const e=this._client.walletExtension?.getChainId(),s=this.chains.find((t=>this.options.chainId?t.chainId===this.options.chainId:t.chainId===e))||this.chains[0],i=this.options.chainId||s?.chainId,r=this.options.jsonRpcUrl||s?.rpc[0];this._provider=this._client.makeWeb3Provider(r,i)}return this._provider}async getSigner(){let{chainId:t}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const[e,n]=await Promise.all([this.getProvider(),this.getAccount()]);return new o.Q(e,t).getSigner(n)}async isAuthorized(){try{return!!(await this.getAccount())}catch{return!1}}async switchChain(t){const e=await this.getProvider(),n=a.hexValue(t);try{return await e.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]}),this.chains.find((e=>e.chainId===t))??{chainId:t,name:`Chain ${n}`,slug:`${n}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],testnet:!1,chain:"ethereum",shortName:"eth"}}catch(s){const c=this.chains.find((e=>e.chainId===t));if(!c)throw new r.C({chainId:t,connectorId:this.id});if(4902===s.code)try{return await e.request({method:"wallet_addEthereumChain",params:[{chainId:n,chainName:c.name,nativeCurrency:c.nativeCurrency,rpcUrls:(0,d.g)(c),blockExplorerUrls:this.getBlockExplorerUrls(c)}]}),c}catch(i){if(this._isUserRejectedRequestError(i))throw new r.U(i);throw new r.A}if(this._isUserRejectedRequestError(s))throw new r.U(s);throw new r.S(s)}}_isUserRejectedRequestError(t){return/(user rejected)/i.test(t.message)}async setupListeners(){const t=await this.getProvider();t.on("accountsChanged",this.onAccountsChanged),t.on("chainChanged",this.onChainChanged),t.on("disconnect",this.onDisconnect)}async getQrUrl(){if(await this.getProvider(),!this._client)throw new Error("Coinbase Wallet SDK not initialized");return this._client.getQrUrl()}}}}]);