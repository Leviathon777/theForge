"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb-dev_react-core_node_modules_thirdweb-dev_wallets_evm_connectors_embedde-7f2822"],{

/***/ "./node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js":
/*!*****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js ***!
  \*****************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EmbeddedWalletConnector\": function() { return /* binding */ EmbeddedWalletConnector; }\n/* harmony export */ });\n/* harmony import */ var _dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../dist/defineProperty-350fc508.browser.esm.js */ \"./node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/defineProperty-350fc508.browser.esm.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js */ \"./node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js\");\n/* harmony import */ var _dist_walletIds_dff6dced_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../dist/walletIds-dff6dced.browser.esm.js */ \"./node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/walletIds-dff6dced.browser.esm.js\");\n/* harmony import */ var _dist_connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../dist/connector-05689d68.browser.esm.js */ \"./node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/connector-05689d68.browser.esm.js\");\n/* harmony import */ var _dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../dist/embedded-wallet-e375380a.browser.esm.js */ \"./node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/embedded-wallet-e375380a.browser.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/@thirdweb-dev/react-core/node_modules/eventemitter3/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\nclass EmbeddedWalletConnector extends _dist_connector_05689d68_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.C {\n  constructor(options) {\n    super();\n    (0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this, \"id\", _dist_walletIds_dff6dced_browser_esm_js__WEBPACK_IMPORTED_MODULE_3__.w.paper);\n    (0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this, \"name\", \"Embedded Wallet\");\n    (0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this, \"ready\", true);\n    (0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this, \"user\", null);\n    (0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this, \"onAccountsChanged\", async accounts => {\n      if (accounts.length === 0) {\n        await this.onDisconnect();\n      } else {\n        this.emit(\"change\", {\n          account: ethers__WEBPACK_IMPORTED_MODULE_4__.utils.getAddress(accounts[0])\n        });\n      }\n    });\n    (0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this, \"onChainChanged\", chainId => {\n      const id = (0,_dist_normalizeChainId_1fb9aedf_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.n)(chainId);\n      const unsupported = this.options.chains.findIndex(c => c.chainId === id) === -1;\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    (0,_dist_defineProperty_350fc508_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__._)(this, \"onDisconnect\", async () => {\n      this.emit(\"disconnect\");\n    });\n    this.options = options;\n  }\n  getEmbeddedWalletSDK() {\n    if (!this._embeddedWalletSdk) {\n      this._embeddedWalletSdk = new _dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.E({\n        clientId: this.options.clientId,\n        chain: \"Ethereum\",\n        onAuthSuccess: this.options.onAuthSuccess\n      });\n    }\n    return this._embeddedWalletSdk;\n  }\n  async connect(args) {\n    // backwards compatibility - options should really be required here\n    if (!args) {\n      // default to iframe flow\n      const result = await this.authenticate({\n        strategy: \"iframe\"\n      });\n      if (!result.user) {\n        throw new Error(\"Error connecting User\");\n      }\n      this.user = result.user;\n    } else {\n      if (!args.authResult) {\n        throw new Error(\"Missing authData - call authenticate() first with your authentication strategy\");\n      }\n      if (!args.authResult.user) {\n        throw new Error(\"Missing authData.user - call authenticate() first with your authentication strategy\");\n      }\n      this.user = args.authResult.user;\n    }\n    if (args?.chainId) {\n      this.switchChain(args.chainId);\n    }\n    return this.getAddress();\n  }\n  async disconnect() {\n    const paper = this._embeddedWalletSdk;\n    await paper?.auth.logout();\n    this._signer = undefined;\n    this._embeddedWalletSdk = undefined;\n    this.user = null;\n  }\n  async getAddress() {\n    if (!this.user) {\n      throw new Error(\"Embedded Wallet is not connected\");\n    }\n    return await this.getSigner().then(signer => signer.getAddress());\n  }\n  async isConnected() {\n    try {\n      const addr = await this.getAddress();\n      return !!addr;\n    } catch (e) {\n      return false;\n    }\n  }\n  async getProvider() {\n    const signer = await this.getSigner();\n    if (!signer.provider) {\n      throw new Error(\"Provider not found\");\n    }\n    return signer.provider;\n  }\n  async getSigner() {\n    if (this._signer) {\n      return this._signer;\n    }\n    const user = await this.getUser();\n    const signer = await user.wallet.getEthersJsSigner({\n      rpcEndpoint: this.options.chain.rpc[0] || \"\" // TODO: handle chain.rpc being empty array\n    });\n    if (!signer) {\n      throw new Error(\"Signer not found\");\n    }\n    this._signer = signer;\n    return signer;\n  }\n  async isAuthorized() {\n    return false;\n  }\n  async switchChain(chainId) {\n    const chain = this.options.chains.find(c => c.chainId === chainId);\n    if (!chain) {\n      throw new Error(\"Chain not configured\");\n    }\n    try {\n      // update chain in wallet\n      await this.user?.wallet.setChain({\n        chain: \"Ethereum\"\n      }); // just pass Ethereum no matter what chain we are going to connect\n      // update signer\n      this._signer = await this.user?.wallet.getEthersJsSigner({\n        rpcEndpoint: chain.rpc[0] || \"\"\n      });\n      this.emit(\"change\", {\n        chain: {\n          id: chainId,\n          unsupported: false\n        }\n      });\n    } catch (e) {\n      console.warn(\"Failed to switch chain\", e);\n    }\n  }\n  async setupListeners() {\n    return Promise.resolve();\n  }\n  updateChains(chains) {\n    this.options.chains = chains;\n  }\n  async getUser() {\n    if (!this.user || !this.user.wallet || !this.user.wallet.getEthersJsSigner // when serializing, functions are lost, need to rehydrate\n    ) {\n      const embeddedWalletSdk = this.getEmbeddedWalletSDK();\n      const user = await embeddedWalletSdk.getUser();\n      switch (user.status) {\n        case _dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.U.LOGGED_IN_WALLET_INITIALIZED:\n          {\n            this.user = user;\n            break;\n          }\n        default:\n          {\n            // if logged out or unitialized, we can't get a signer, so throw an error\n            throw new Error(\"Embedded Wallet is not authenticated, please authenticate first\");\n          }\n      }\n    }\n    return this.user;\n  }\n  async getEmail() {\n    const user = await this.getUser();\n    return user.authDetails.email;\n  }\n  async getPhoneNumber() {\n    const user = await this.getUser();\n    return user.authDetails.phoneNumber;\n  }\n  async getRecoveryInformation() {\n    const user = await this.getUser();\n    return user.authDetails;\n  }\n  async sendVerificationEmail(_ref) {\n    let {\n      email\n    } = _ref;\n    const ewSDK = this.getEmbeddedWalletSDK();\n    return ewSDK.auth.sendEmailLoginOtp({\n      email\n    });\n  }\n  async sendVerificationSms(_ref2) {\n    let {\n      phoneNumber\n    } = _ref2;\n    const ewSDK = this.getEmbeddedWalletSDK();\n    return ewSDK.auth.sendSmsLoginOtp({\n      phoneNumber\n    });\n  }\n  async authenticate(params) {\n    const ewSDK = this.getEmbeddedWalletSDK();\n    const strategy = params.strategy;\n    switch (strategy) {\n      case \"email_verification\":\n        {\n          return await ewSDK.auth.verifyEmailLoginOtp({\n            email: params.email,\n            otp: params.verificationCode,\n            recoveryCode: params.recoveryCode\n          });\n        }\n      case \"phone_number_verification\":\n        {\n          return await ewSDK.auth.verifySmsLoginOtp({\n            phoneNumber: params.phoneNumber,\n            otp: params.verificationCode,\n            recoveryCode: params.recoveryCode\n          });\n        }\n      case \"apple\":\n      case \"facebook\":\n      case \"google\":\n        {\n          const oauthProvider = oauthStrategyToAuthProvider[strategy];\n          return ewSDK.auth.loginWithOauth({\n            oauthProvider,\n            closeOpenedWindow: params.closeOpenedWindow,\n            openedWindow: params.openedWindow\n          });\n        }\n      case \"jwt\":\n        {\n          return ewSDK.auth.loginWithCustomJwt({\n            jwt: params.jwt,\n            encryptionKey: params.encryptionKey\n          });\n        }\n      case \"auth_endpoint\":\n        {\n          return ewSDK.auth.loginWithCustomAuthEndpoint({\n            payload: params.payload,\n            encryptionKey: params.encryptionKey\n          });\n        }\n      case \"iframe_email_verification\":\n        {\n          return ewSDK.auth.loginWithEmailOtp({\n            email: params.email\n          });\n        }\n      case \"iframe\":\n        {\n          return ewSDK.auth.loginWithModal();\n        }\n      default:\n        assertUnreachable(strategy);\n    }\n  }\n}\nfunction assertUnreachable(x) {\n  throw new Error(\"Invalid param: \" + x);\n}\nconst oauthStrategyToAuthProvider = {\n  google: _dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c.GOOGLE,\n  facebook: _dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c.FACEBOOK,\n  apple: _dist_embedded_wallet_e375380a_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.c.APPLE\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/evm/connectors/embedded-wallet/dist/thirdweb-dev-wallets-evm-connectors-embedded-wallet.browser.esm.js\n"));

/***/ })

}]);