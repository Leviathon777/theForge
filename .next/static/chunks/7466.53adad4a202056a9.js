"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7466],{2840:function(t,r,e){e.d(r,{D:function(){return m},F:function(){return p},I:function(){return c},a:function(){return d},b:function(){return g},c:function(){return l},f:function(){return u},g:function(){return h},u:function(){return f}});var a=e(17736),n=e(16441),i=e(2593),s=e(64146),o=e(48764).Buffer;const c=(()=>n.arrayify("0x80ac58cd"))(),d=(()=>n.arrayify("0xd9b67a26"))(),p={name:"Failed to load NFT metadata"};async function u(t,r,e){if(r.startsWith("data:application/json;base64")&&"undefined"!==typeof o){const e=r.split(",")[1],n=JSON.parse(o.from(e,"base64").toString("utf-8"));return a.a.parse({...n,id:i.O$.from(t).toString(),uri:r})}const s=r.replace("{id}",n.hexZeroPad(i.O$.from(t).toHexString(),32).slice(2));let c;try{c=await e.downloadJSON(s)}catch(d){const a=r.replace("{id}",i.O$.from(t).toString());try{c=await e.downloadJSON(a)}catch(u){console.warn(`failed to get token metadata: ${JSON.stringify({tokenId:t.toString(),tokenUri:r})} -- falling back to default metadata`),c=p}}return a.a.parse({...c,id:i.O$.from(t).toString(),uri:r})}async function l(t,r,n,o){let l;const g=(await e.e(4309).then(e.t.bind(e,84309,19))).default,f=new s.CH(t,g,r),[h,m]=await Promise.all([f.supportsInterface(c),f.supportsInterface(d)]);if(h){const a=(await Promise.resolve().then(e.t.bind(e,47073,19))).default,i=new s.CH(t,a,r);l=await i.tokenURI(n)}else{if(!m)throw Error("Contract must implement ERC 1155 or ERC 721.");{const a=(await Promise.resolve().then(e.t.bind(e,98289,19))).default,i=new s.CH(t,a,r);l=await i.uri(n)}}return l?u(n,l,o):a.a.parse({...p,id:i.O$.from(n).toString(),uri:""})}async function g(t,r){return"string"===typeof t?t:await r.upload(a.C.parse(t))}async function f(t,r,e,n){if(function(t){return void 0===t.find((t=>"string"!==typeof t))}(t))return t;if(function(t){return void 0===t.find((t=>"object"!==typeof t))}(t)){return await r.uploadBatch(t.map((t=>a.C.parse(t))),{rewriteFileNames:{fileStartNumber:e||0},onProgress:n?.onProgress})}throw new Error("NFT metadatas must all be of the same type (all URI or all NFTMetadataInput)")}function h(t){const r=t[0].substring(0,t[0].lastIndexOf("/"));for(let e=0;e<t.length;e++){const a=t[e].substring(0,t[e].lastIndexOf("/"));if(r!==a)throw new Error(`Can only create batches with the same base URI for every entry in the batch. Expected '${r}' but got '${a}'`)}return r.replace(/\/$/,"")+"/"}const m=100},18869:function(t,r,e){e.d(r,{c:function(){return i}});var a=e(99612),n=e(43277);function i(t){return(0,n.i)(t)?a.aV:t}},72555:function(t,r,e){e.d(r,{C:function(){return a}});class a{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},95068:function(t,r,e){e.d(r,{C:function(){return i}});var a=e(23437),n=e(99612);class i{featureName=n.du.name;constructor(t){this.contractWrapper=t}async get(){const[t,r]=await this.contractWrapper.read("getPlatformFeeInfo",[]);return n.bH.parseAsync({platform_fee_recipient:t,platform_fee_basis_points:r})}set=(0,a.f)((async t=>{const r=await n.bH.parseAsync(t);return a.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPlatformFeeInfo",args:[r.platform_fee_recipient,r.platform_fee_basis_points]})}))}},97466:function(t,r,e){e.r(r),e.d(r,{Marketplace:function(){return P}});var a=e(2593),n=e(9279),i=e(61744),s=e(21046),o=e(19485),c=e(64146),d=e(38776),p=e(2840),u=e(43277),l=e(99612),g=e(63813),f=e(23437),h=e(21919),m=e(72555),w=e(95068),y=e(82123),W=e(18869),v=e(99979),A=e(17736);let C=function(t){return t[t.Direct=0]="Direct",t[t.Auction=1]="Auction",t}({});e(13550),e(77191),e(71770);class L{constructor(t,r){this.contractWrapper=t,this.storage=r,this.encoder=new u.C(t)}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.listingId.toString()!==t.toString())throw new l.L(this.getAddress(),t.toString());if(r.listingType!==C.Auction)throw new l.W(this.getAddress(),t.toString(),"Direct","Auction");return await this.mapListing(r)}async getWinningBid(t){await this.validateListing(a.O$.from(t));const r=await this.contractWrapper.read("winningBid",[t]);if(r.offeror!==n.d)return await(0,g.m)(this.contractWrapper.getProvider(),a.O$.from(t),r)}async getWinner(t){const r=await this.validateListing(a.O$.from(t)),e=await this.contractWrapper.read("winningBid",[t]),i=a.O$.from(Math.floor(Date.now()/1e3)),s=a.O$.from(r.endTimeInEpochSeconds);if(i.gt(s)&&e.offeror!==n.d)return e.offeror;const o=new h.a(this.contractWrapper),c=(await o.getEvents("AuctionClosed")).find((r=>r.data.listingId.eq(a.O$.from(t))));if(!c)throw new Error(`Could not find auction with listingId ${t} in closed auctions`);return c.data.winningBidder}createListing=(0,f.f)((async t=>{(0,g.v)(t);const r=await(0,l.aL)(t.assetContractAddress),e=await(0,l.aL)(t.currencyContractAddress);await(0,g.h)(this.contractWrapper,this.getAddress(),r,t.tokenId,await this.contractWrapper.getSignerAddress());const n=await(0,v.n)(this.contractWrapper.getProvider(),t.buyoutPricePerToken,e),i=await(0,v.n)(this.contractWrapper.getProvider(),t.reservePricePerToken,e);let s=Math.floor(t.startTimestamp.getTime()/1e3);const o=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;s<o&&(s=o);const c=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r,tokenId:t.tokenId,buyoutPricePerToken:n,currencyToAccept:(0,W.c)(e),listingType:C.Auction,quantityToList:t.quantity,reservePricePerToken:i,secondsUntilEndTime:t.listingDurationInSeconds,startTime:a.O$.from(s)}],parse:t=>({id:this.contractWrapper.parseLogs("ListingAdded",t?.logs)[0].args.listingId,receipt:t})});return c.setGasLimitMultiple(1.2),c}));createListingsBatch=(0,f.f)((async t=>{const r=(await Promise.all(t.map((t=>this.createListing.prepare(t))))).map((t=>t.encode())),e=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:t=>this.contractWrapper.parseLogs("ListingAdded",t?.logs).map((r=>({id:r.args.listingId,receipt:t})))});return e.setGasLimitMultiple(1.2),e}));buyoutListing=(0,f.f)((async t=>{const r=await this.validateListing(a.O$.from(t)),e=await(0,u.f)(this.contractWrapper.getProvider(),r.currencyContractAddress);return this.makeBid.prepare(t,i.formatUnits(r.buyoutPrice,e.decimals))}));makeBid=(0,f.f)((async(t,r)=>{const e=await this.validateListing(a.O$.from(t)),n=await(0,v.n)(this.contractWrapper.getProvider(),r,e.currencyContractAddress);if(n.eq(a.O$.from(0)))throw new Error("Cannot make a bid with 0 value");const i=await this.contractWrapper.read("bidBufferBps",[]),o=await this.getWinningBid(t);if(o){const t=(0,g.a)(o.pricePerToken,n,i);(0,d.Z)(t,"Bid price is too low based on the current winning bid and the bid buffer")}else{const t=n,r=a.O$.from(e.reservePrice);(0,d.Z)(t.gte(r),"Bid price is too low based on reserve price")}const c=a.O$.from(e.quantity),p=n.mul(c),u=await this.contractWrapper.getCallOverrides()||{};await(0,A.s)(this.contractWrapper,p,e.currencyContractAddress,u);const l=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[t,e.quantity,e.currencyContractAddress,n,s.Bz],overrides:u});return l.setGasLimitMultiple(1.2),l}));cancelListing=(0,f.f)((async t=>{const r=await this.validateListing(a.O$.from(t)),e=a.O$.from(Math.floor(Date.now()/1e3)),i=a.O$.from(r.startTimeInEpochSeconds),s=await this.contractWrapper.read("winningBid",[t]);if(e.gt(i)&&s.offeror!==n.d)throw new l.t(t.toString());const o=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[a.O$.from(t),await this.contractWrapper.getSignerAddress()]});return o.setGasLimitMultiple(1.2),o}));closeListing=(0,f.f)((async(t,r)=>{r||(r=await this.contractWrapper.getSignerAddress());const e=await this.validateListing(a.O$.from(t));try{const e=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[a.O$.from(t),r]});return e.setGasLimitMultiple(1.2),e}catch(n){throw n.message.includes("cannot close auction before it has ended")?new l.w(t.toString(),e.endTimeInEpochSeconds.toString()):n}}));executeSale=(0,f.f)((async t=>{const r=await this.validateListing(a.O$.from(t));try{const e=await this.getWinningBid(t);(0,d.Z)(e,"No winning bid found");const a=this.encoder.encode("closeAuction",[t,r.sellerAddress]),n=this.encoder.encode("closeAuction",[t,e.buyerAddress]),i=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[a,n]});return i.setGasLimitMultiple(1.2),i}catch(e){throw e.message.includes("cannot close auction before it has ended")?new l.w(t.toString(),r.endTimeInEpochSeconds.toString()):e}}));updateListing=(0,f.f)((async t=>{const r=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[t.id,t.quantity,t.reservePrice,t.buyoutPrice,t.currencyContractAddress,t.startTimeInEpochSeconds,t.endTimeInEpochSeconds]});return r.setGasLimitMultiple(1.2),r}));async getBidBufferBps(){return this.contractWrapper.read("bidBufferBps",[])}async getMinimumNextBid(t){const[r,e,n]=await Promise.all([this.getBidBufferBps(),this.getWinningBid(t),this.validateListing(a.O$.from(t))]),i=e?e.currencyValue.value:n.reservePrice,s=i.add(i.mul(r).div(1e4));return(0,u.a)(this.contractWrapper.getProvider(),n.currencyContractAddress,s)}async validateListing(t){try{return await this.getListing(t)}catch(r){throw console.error(`Error getting the listing with id ${t}`),r}}async mapListing(t){return{assetContractAddress:t.assetContract,buyoutPrice:a.O$.from(t.buyoutPricePerToken),currencyContractAddress:t.currency,buyoutCurrencyValuePerToken:await(0,u.a)(this.contractWrapper.getProvider(),t.currency,t.buyoutPricePerToken),id:t.listingId.toString(),tokenId:t.tokenId,quantity:t.quantity,startTimeInEpochSeconds:t.startTime,asset:await(0,p.c)(t.assetContract,this.contractWrapper.getProvider(),t.tokenId,this.storage),reservePriceCurrencyValuePerToken:await(0,u.a)(this.contractWrapper.getProvider(),t.currency,t.reservePricePerToken),reservePrice:a.O$.from(t.reservePricePerToken),endTimeInEpochSeconds:t.endTime,sellerAddress:t.tokenOwner,type:C.Auction}}}class T{constructor(t,r){this.contractWrapper=t,this.storage=r}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.assetContract===n.d)throw new l.L(this.getAddress(),t.toString());if(r.listingType!==C.Direct)throw new l.W(this.getAddress(),t.toString(),"Auction","Direct");return await this.mapListing(r)}async getActiveOffer(t,r){await this.validateListing(a.O$.from(t)),(0,d.Z)(o.isAddress(r),"Address must be a valid address");const e=await this.contractWrapper.read("offers",[t,await(0,l.aL)(r)]);if(e.offeror!==n.d)return await(0,g.m)(this.contractWrapper.getProvider(),a.O$.from(t),e)}createListing=(0,f.f)((async t=>{(0,g.v)(t);const r=await(0,l.aL)(t.assetContractAddress),e=await(0,l.aL)(t.currencyContractAddress);await(0,g.h)(this.contractWrapper,this.getAddress(),r,t.tokenId,await this.contractWrapper.getSignerAddress());const n=await(0,v.n)(this.contractWrapper.getProvider(),t.buyoutPricePerToken,e);let i=Math.floor(t.startTimestamp.getTime()/1e3);const s=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;i<s&&(i=s);const o=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:r,tokenId:t.tokenId,buyoutPricePerToken:n,currencyToAccept:(0,W.c)(e),listingType:C.Direct,quantityToList:t.quantity,reservePricePerToken:n,secondsUntilEndTime:t.listingDurationInSeconds,startTime:a.O$.from(i)}],parse:t=>({id:this.contractWrapper.parseLogs("ListingAdded",t?.logs)[0].args.listingId,receipt:t})});return o.setGasLimitMultiple(1.2),o}));createListingsBatch=(0,f.f)((async t=>{const r=(await Promise.all(t.map((t=>this.createListing.prepare(t))))).map((t=>t.encode())),e=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r],parse:t=>this.contractWrapper.parseLogs("ListingAdded",t?.logs).map((r=>({id:r.args.listingId,receipt:t})))});return e.setGasLimitMultiple(1.2),e}));makeOffer=(0,f.f)((async(t,r,e,n,i)=>{if((0,u.i)(e))throw new Error("You must use the wrapped native token address when making an offer with a native token");const o=await(0,v.n)(this.contractWrapper.getProvider(),n,e);try{await this.getListing(t)}catch(h){throw console.error("Failed to get listing, err =",h),new Error(`Error getting the listing with id ${t}`)}const c=a.O$.from(r),d=a.O$.from(o).mul(c),p=await this.contractWrapper.getCallOverrides()||{};await(0,A.s)(this.contractWrapper,d,e,p);let l=s.Bz;i&&(l=a.O$.from(Math.floor(i.getTime()/1e3)));const g=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[t,r,e,o,l],overrides:p});return g.setGasLimitMultiple(1.2),g}));acceptOffer=(0,f.f)((async(t,r)=>{await this.validateListing(a.O$.from(t));const e=await(0,l.aL)(r),n=await this.contractWrapper.read("offers",[t,e]),i=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"acceptOffer",args:[t,e,n.currency,n.pricePerToken]});return i.setGasLimitMultiple(1.2),i}));buyoutListing=(0,f.f)((async(t,r,e)=>{const n=await this.validateListing(a.O$.from(t)),{valid:i,error:s}=await this.isStillValidListing(n,r);if(!i)throw new Error(`Listing ${t} is no longer valid. ${s}`);const o=e||await this.contractWrapper.getSignerAddress(),c=a.O$.from(r),d=a.O$.from(n.buyoutPrice).mul(c),p=await this.contractWrapper.getCallOverrides()||{};await(0,A.s)(this.contractWrapper,d,n.currencyContractAddress,p);const u=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"buy",args:[t,o,c,n.currencyContractAddress,d],overrides:p});return u.setGasLimitMultiple(1.2),u}));updateListing=(0,f.f)((async t=>{const r=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[t.id,t.quantity,t.buyoutPrice,t.buyoutPrice,await(0,l.aL)(t.currencyContractAddress),t.startTimeInSeconds,t.secondsUntilEnd]});return r.setGasLimitMultiple(1.2),r}));cancelListing=(0,f.f)((async t=>{const r=f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"cancelDirectListing",args:[t]});return r.setGasLimitMultiple(1.2),r}));async validateListing(t){try{return await this.getListing(t)}catch(r){throw console.error(`Error getting the listing with id ${t}`),r}}async mapListing(t){return{assetContractAddress:t.assetContract,buyoutPrice:a.O$.from(t.buyoutPricePerToken),currencyContractAddress:t.currency,buyoutCurrencyValuePerToken:await(0,u.a)(this.contractWrapper.getProvider(),t.currency,t.buyoutPricePerToken),id:t.listingId.toString(),tokenId:t.tokenId,quantity:t.quantity,startTimeInSeconds:t.startTime,asset:await(0,p.c)(t.assetContract,this.contractWrapper.getProvider(),t.tokenId,this.storage),secondsUntilEnd:t.endTime,sellerAddress:t.tokenOwner,type:C.Direct}}async isStillValidListing(t,r){if(!(await(0,g.i)(this.contractWrapper.getProvider(),this.getAddress(),t.assetContractAddress,t.tokenId,t.sellerAddress)))return{valid:!1,error:`Token '${t.tokenId}' from contract '${t.assetContractAddress}' is not approved for transfer`};const a=this.contractWrapper.getProvider(),n=(await e.e(4309).then(e.t.bind(e,84309,19))).default,i=new c.CH(t.assetContractAddress,n,a),s=await i.supportsInterface(p.I),o=await i.supportsInterface(p.a);if(s){const r=(await Promise.resolve().then(e.t.bind(e,56509,19))).default,n=new c.CH(t.assetContractAddress,r,a);let i;try{i=await n.ownerOf(t.tokenId)}catch(d){}const s=i?.toLowerCase()===t.sellerAddress.toLowerCase();return{valid:s,error:s?void 0:`Seller is not the owner of Token '${t.tokenId}' from contract '${t.assetContractAddress} anymore'`}}if(o){const n=(await Promise.resolve().then(e.t.bind(e,88417,19))).default,i=new c.CH(t.assetContractAddress,n,a),s=(await i.balanceOf(t.sellerAddress,t.tokenId)).gte(r||t.quantity);return{valid:s,error:s?void 0:`Seller does not have enough balance of Token '${t.tokenId}' from contract '${t.assetContractAddress} to fulfill the listing`}}return{valid:!1,error:"Contract does not implement ERC 1155 or ERC 721."}}}class P{static contractRoles=l.dH;get chainId(){return this._chainId}constructor(t,r,e){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},n=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new l.cs(t,r,n,a,e);this._chainId=i,this.abi=l.bj.parse(n||[]),this.contractWrapper=s,this.storage=e,this.metadata=new h.C(this.contractWrapper,l.b$,this.storage),this.app=new h.b(this.contractWrapper,this.metadata,this.storage),this.roles=new y.C(this.contractWrapper,P.contractRoles),this.encoder=new u.C(this.contractWrapper),this.estimator=new h.G(this.contractWrapper),this.direct=new T(this.contractWrapper,this.storage),this.auction=new L(this.contractWrapper,this.storage),this.events=new h.a(this.contractWrapper),this.platformFees=new w.C(this.contractWrapper),this.interceptor=new m.C(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getListing(t){const r=await this.contractWrapper.read("listings",[t]);if(r.assetContract===n.d)throw new l.L(this.getAddress(),t.toString());switch(r.listingType){case C.Auction:return await this.auction.mapListing(r);case C.Direct:return await this.direct.mapListing(r);default:throw new Error(`Unknown listing type: ${r.listingType}`)}}async getActiveListings(t){const r=await this.getAllListingsNoFilter(!0),e=this.applyFilter(r,t),n=a.O$.from(Math.floor(Date.now()/1e3));return e.filter((t=>t.type===C.Auction&&a.O$.from(t.endTimeInEpochSeconds).gt(n)&&a.O$.from(t.startTimeInEpochSeconds).lte(n)||t.type===C.Direct&&a.O$.from(t.quantity).gt(0)))}async getAllListings(t){const r=await this.getAllListingsNoFilter(!1);return this.applyFilter(r,t)}getAll=this.getAllListings;async getTotalCount(){return await this.contractWrapper.read("totalListings",[])}async isRestrictedToListerRoleOnly(){return!(await this.contractWrapper.read("hasRole",[(0,l.H)("lister"),n.d]))}async getBidBufferBps(){return this.contractWrapper.read("bidBufferBps",[])}async getTimeBufferInSeconds(){return this.contractWrapper.read("timeBuffer",[])}async getOffers(t){const r=await this.events.getEvents("NewOffer",{order:"desc",filters:{listingId:t}});return await Promise.all(r.map((r=>(0,g.m)(this.contractWrapper.getProvider(),a.O$.from(t),{quantityWanted:r.data.quantityWanted,pricePerToken:r.data.quantityWanted.gt(0)?r.data.totalOfferAmount.div(r.data.quantityWanted):r.data.totalOfferAmount,currency:r.data.currency,offeror:r.data.offeror}))))}buyoutListing=(0,f.f)((async(t,r,e)=>{const a=await this.contractWrapper.read("listings",[t]);if(a.listingId.toString()!==t.toString())throw new l.L(this.getAddress(),t.toString());switch(a.listingType){case C.Direct:return(0,d.Z)(void 0!==r,"quantityDesired is required when buying out a direct listing"),await this.direct.buyoutListing.prepare(t,r,e);case C.Auction:return await this.auction.buyoutListing.prepare(t);default:throw Error(`Unknown listing type: ${a.listingType}`)}}));makeOffer=(0,f.f)((async(t,r,e)=>{const a=await this.contractWrapper.read("listings",[t]);if(a.listingId.toString()!==t.toString())throw new l.L(this.getAddress(),t.toString());const n=await this.contractWrapper.getChainID();switch(a.listingType){case C.Direct:return(0,d.Z)(e,"quantity is required when making an offer on a direct listing"),await this.direct.makeOffer.prepare(t,e,(0,u.i)(a.currency)?l.aW[n].wrapped.address:a.currency,r);case C.Auction:return await this.auction.makeBid.prepare(t,r);default:throw Error(`Unknown listing type: ${a.listingType}`)}}));setBidBufferBps=(0,f.f)((async t=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const r=await this.getTimeBufferInSeconds();return f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[r,a.O$.from(t)]})}));setTimeBufferInSeconds=(0,f.f)((async t=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());const r=await this.getBidBufferBps();return f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[a.O$.from(t),r]})}));allowListingFromSpecificAssetOnly=(0,f.f)((async t=>{const r=[];return(await this.roles.get("asset")).includes(n.d)&&r.push(this.encoder.encode("revokeRole",[(0,l.H)("asset"),n.d])),r.push(this.encoder.encode("grantRole",[(0,l.H)("asset"),t])),f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[r]})}));allowListingFromAnyAsset=(0,f.f)((async()=>{const t=[],r=await this.roles.get("asset");for(const e in r)t.push(this.encoder.encode("revokeRole",[(0,l.H)("asset"),e]));return t.push(this.encoder.encode("grantRole",[(0,l.H)("asset"),n.d])),f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[t]})}));async getAllListingsNoFilter(t){return(await Promise.all(Array.from(Array((await this.contractWrapper.read("totalListings",[])).toNumber()).keys()).map((async r=>{let e;try{e=await this.getListing(r)}catch(a){return a instanceof l.L?void 0:void console.warn(`Failed to get listing ${r}' - skipping. Try 'marketplace.getListing(${r})' to get the underlying error.`)}if(e.type===C.Auction)return e;if(t){const{valid:t}=await this.direct.isStillValidListing(e);if(!t)return}return e})))).filter((t=>void 0!==t))}applyFilter(t,r){let e=[...t];const n=a.O$.from(r?.start||0).toNumber(),i=a.O$.from(r?.count||p.D).toNumber();return r&&(r.seller&&(e=e.filter((t=>t.sellerAddress.toString().toLowerCase()===r?.seller?.toString().toLowerCase()))),r.tokenContract&&(e=e.filter((t=>t.assetContractAddress.toString().toLowerCase()===r?.tokenContract?.toString().toLowerCase()))),void 0!==r.tokenId&&(e=e.filter((t=>t.tokenId.toString()===r?.tokenId?.toString()))),e=e.filter(((t,r)=>r>=n)),e=e.slice(0,i)),e}async prepare(t,r,e){return f.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}},63813:function(t,r,e){e.d(r,{a:function(){return g},g:function(){return f},h:function(){return p},i:function(){return d},m:function(){return l},v:function(){return u}});var a=e(64146),n=e(2593),i=e(38776),s=e(2840),o=e(99612),c=e(43277);async function d(t,r,n,i,o){try{const d=(await e.e(4309).then(e.t.bind(e,84309,19))).default,p=new a.CH(n,d,t),[u,l]=await Promise.all([p.supportsInterface(s.I),p.supportsInterface(s.a)]);if(u){const s=(await Promise.resolve().then(e.t.bind(e,56509,19))).default,d=new a.CH(n,s,t);if(await d.isApprovedForAll(o,r))return!0;let p;try{p=await d.getApproved(i)}catch(c){}return p?.toLowerCase()===r.toLowerCase()}if(l){const i=(await Promise.resolve().then(e.t.bind(e,88417,19))).default,s=new a.CH(n,i,t);return await s.isApprovedForAll(o,r)}return console.error("Contract does not implement ERC 1155 or ERC 721."),!1}catch(d){return console.error("Failed to check if token is approved",d),!1}}async function p(t,r,a,n,i){const c=(await e.e(4309).then(e.t.bind(e,84309,19))).default,d=new o.cs(t.getSignerOrProvider(),a,c,t.options,t.storage),[p,u]=await Promise.all([d.read("supportsInterface",[s.I]),d.read("supportsInterface",[s.a])]);if(p){const s=(await Promise.resolve().then(e.t.bind(e,56509,19))).default,c=new o.cs(t.getSignerOrProvider(),a,s,t.options,t.storage);if(!(await c.read("isApprovedForAll",[i,r]))){(await c.read("getApproved",[n])).toLowerCase()===r.toLowerCase()||await c.sendTransaction("setApprovalForAll",[r,!0])}}else{if(!u)throw Error("Contract must implement ERC 1155 or ERC 721.");{const n=(await Promise.resolve().then(e.t.bind(e,88417,19))).default,s=new o.cs(t.getSignerOrProvider(),a,n,t.options,t.storage);await s.read("isApprovedForAll",[i,r])||await s.sendTransaction("setApprovalForAll",[r,!0])}}}function u(t){if((0,i.Z)(void 0!==t.assetContractAddress&&null!==t.assetContractAddress,"Asset contract address is required"),(0,i.Z)(void 0!==t.buyoutPricePerToken&&null!==t.buyoutPricePerToken,"Buyout price is required"),(0,i.Z)(void 0!==t.listingDurationInSeconds&&null!==t.listingDurationInSeconds,"Listing duration is required"),(0,i.Z)(void 0!==t.startTimestamp&&null!==t.startTimestamp,"Start time is required"),(0,i.Z)(void 0!==t.tokenId&&null!==t.tokenId,"Token ID is required"),(0,i.Z)(void 0!==t.quantity&&null!==t.quantity,"Quantity is required"),"NewAuctionListing"===t.type)(0,i.Z)(void 0!==t.reservePricePerToken&&null!==t.reservePricePerToken,"Reserve price is required")}async function l(t,r,e){return{quantity:e.quantityDesired,pricePerToken:e.pricePerToken,currencyContractAddress:e.currency,buyerAddress:e.offeror,quantityDesired:e.quantityWanted,currencyValue:await(0,c.a)(t,e.currency,e.quantityWanted.mul(e.pricePerToken)),listingId:r}}function g(t,r,e){if(e=n.O$.from(e),t=n.O$.from(t),r=n.O$.from(r),t.eq(n.O$.from(0)))return!1;return r.sub(t).mul(o.dE).div(t).gte(e)}async function f(t,r,e){const a=[];for(;r-t>s.D;)a.push(e(t,t+s.D-1)),t+=s.D;return a.push(e(t,r-1)),await Promise.all(a)}},17736:function(t,r,e){e.d(r,{B:function(){return c},C:function(){return d},N:function(){return p},a:function(){return u},s:function(){return l}});var a=e(99612),n=e(1604),i=e(43277);const s=(()=>n.z.object({}).catchall(n.z.union([a.cx,n.z.unknown()])))(),o=(()=>n.z.union([n.z.array(n.z.array(s)).transform((t=>t.flat())),n.z.array(s),s]).optional().nullable())(),c=(()=>n.z.object({name:n.z.union([n.z.string(),n.z.number()]).optional().nullable(),description:n.z.string().nullable().optional().nullable(),image:a.cy.nullable().optional(),animation_url:a.cy.optional().nullable()}))(),d=(()=>c.extend({external_url:a.cy.nullable().optional(),background_color:a.cz.optional().nullable(),properties:o,attributes:o}).catchall(n.z.union([a.cx,n.z.unknown()])))(),p=(()=>n.z.union([d,n.z.string()]))(),u=(()=>d.extend({id:n.z.string(),uri:n.z.string(),image:n.z.string().nullable().optional(),external_url:n.z.string().nullable().optional(),animation_url:n.z.string().nullable().optional()}))();async function l(t,r,n,s){if(!(0,i.i)(n)){const i=(await Promise.resolve().then(e.t.bind(e,30853,19))).default,o=t.getSigner(),c=t.getProvider(),d=new a.cs(o||c,n,i,t.options,t.storage),p=await t.getSignerAddress(),u=t.address;return(await d.read("allowance",[p,u])).lt(r)&&await d.sendTransaction("approve",[u,r]),s}s.value=r}}}]);