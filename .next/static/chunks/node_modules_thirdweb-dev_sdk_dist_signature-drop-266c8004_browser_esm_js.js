"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_thirdweb-dev_sdk_dist_signature-drop-266c8004_browser_esm_js"],{

/***/ "./node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-4c4125d2.browser.esm.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-4c4125d2.browser.esm.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"S\": function() { return /* binding */ StandardErc721; }\n/* harmony export */ });\n/* harmony import */ var _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-33cd3415.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/index-33cd3415.browser.esm.js\");\n/* harmony import */ var _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transactions-72f9603c.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/transactions-72f9603c.browser.esm.js\");\n/* harmony import */ var _erc_721_27306550_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./erc-721-27306550.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/erc-721-27306550.browser.esm.js\");\n\n\n\n\n/**\n * Standard ERC721 NFT functions\n * @remarks Basic functionality for a ERC721 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.nft.transfer(walletAddress, tokenId);\n * ```\n * @public\n */\nclass StandardErc721 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.erc721 = new _erc_721_27306550_browser_esm_js__WEBPACK_IMPORTED_MODULE_0__.E(this.contractWrapper, this.storage, chainId);\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /**\n   * Get all NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * console.log(nfts);\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async getAll(queryParams) {\n    return this.erc721.getAll(queryParams);\n  }\n\n  /**\n   * Get all NFTs owned by a specific wallet\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * console.log(nfts);\n   * ```\n   * @param walletAddress - the wallet address to query, defaults to the connected wallet\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  async getOwned(walletAddress, queryParams) {\n    if (walletAddress) {\n      walletAddress = await (0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aL)(walletAddress);\n    }\n    return this.erc721.getOwned(walletAddress, queryParams);\n  }\n\n  /**\n   * Get Owned Token Ids\n   * @remarks Get all the token ids of NFTs owned by a specific wallet (no metadata)\n   */\n  async getOwnedTokenIds(walletAddress) {\n    if (walletAddress) {\n      walletAddress = await (0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aL)(walletAddress);\n    }\n    return this.erc721.getOwnedTokenIds(walletAddress);\n  }\n\n  /**\n   * Get total minted supply count\n   */\n  async totalSupply() {\n    return this.erc721.totalCirculatingSupply();\n  }\n\n  /**\n   * Get a single NFT\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0;\n   * const nft = await contract.get(tokenId);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */\n  async get(tokenId) {\n    return this.erc721.get(tokenId);\n  }\n\n  /**\n   * Get the current owner of a given NFT within this Contract\n   *\n   * @param tokenId - the tokenId of the NFT\n   * @returns The address of the owner\n   */\n  async ownerOf(tokenId) {\n    return this.erc721.ownerOf(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.balanceOf(walletAddress);\n   * console.log(balance);\n   * ```\n   */\n  async balanceOf(address) {\n    return this.erc721.balanceOf(address);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  async balance() {\n    return this.erc721.balance();\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  async isApproved(address, operator) {\n    return this.erc721.isApproved(address, operator);\n  }\n\n  /**\n   * Transfer an NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0;\n   * await contract.transfer(walletAddress, tokenId);\n   * ```\n   */\n  transfer = /* @__PURE__ */(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(async (to, tokenId) => {\n    return this.erc721.transfer.prepare(to, tokenId);\n  });\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  setApprovalForAll = /* @__PURE__ */(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(async (operator, approved) => {\n    return this.erc721.setApprovalForAll.prepare(operator, approved);\n  });\n\n  /**\n   * Approve an operator for the NFT owner. Operators can call transferFrom or safeTransferFrom for the specified token.\n   * @param operator - the operator's address\n   * @param tokenId - the tokenId to give approval for\n   *\n   * @internal\n   */\n  setApprovalForToken = /* @__PURE__ */(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(async (operator, tokenId) => {\n    return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_2__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method: \"approve\",\n      args: [await (0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aL)(operator), tokenId]\n    });\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-4c4125d2.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@thirdweb-dev/sdk/dist/signature-drop-266c8004.browser.esm.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/signature-drop-266c8004.browser.esm.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SignatureDrop\": function() { return /* binding */ SignatureDrop; }\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./QueryParams-32a56510.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/QueryParams-32a56510.browser.esm.js\");\n/* harmony import */ var _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./index-33cd3415.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/index-33cd3415.browser.esm.js\");\n/* harmony import */ var _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./transactions-72f9603c.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/transactions-72f9603c.browser.esm.js\");\n/* harmony import */ var _contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./contract-appuri-5c40af52.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-appuri-5c40af52.browser.esm.js\");\n/* harmony import */ var _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fetchCurrencyValue-32d08b05.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/fetchCurrencyValue-32d08b05.browser.esm.js\");\n/* harmony import */ var _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./contract-interceptor-d7b164a7.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-interceptor-d7b164a7.browser.esm.js\");\n/* harmony import */ var _contract_owner_49e75547_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./contract-owner-49e75547.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-owner-49e75547.browser.esm.js\");\n/* harmony import */ var _contract_platform_fee_e756e68f_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./contract-platform-fee-e756e68f.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-platform-fee-e756e68f.browser.esm.js\");\n/* harmony import */ var _contract_roles_71988d2e_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contract-roles-71988d2e.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-roles-71988d2e.browser.esm.js\");\n/* harmony import */ var _contract_sales_918c7cb8_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contract-sales-918c7cb8.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/contract-sales-918c7cb8.browser.esm.js\");\n/* harmony import */ var _drop_claim_conditions_e6f2abbf_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./drop-claim-conditions-e6f2abbf.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/drop-claim-conditions-e6f2abbf.browser.esm.js\");\n/* harmony import */ var _erc_721_standard_4c4125d2_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./erc-721-standard-4c4125d2.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/erc-721-standard-4c4125d2.browser.esm.js\");\n/* harmony import */ var _erc_721_27306550_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./erc-721-27306550.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/erc-721-27306550.browser.esm.js\");\n/* harmony import */ var _thirdweb_checkout_f6974aaf_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./thirdweb-checkout-f6974aaf.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-f6974aaf.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bn.js */ \"./node_modules/bn.js/lib/bn.js\");\n/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ \"./node_modules/@thirdweb-dev/sdk/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! fast-deep-equal */ \"./node_modules/fast-deep-equal/index.js\");\n/* harmony import */ var fast_deep_equal__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(fast_deep_equal__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Setup a collection of NFTs where when it comes to minting, you can authorize\n * some external party to mint tokens on your contract, and specify what exactly\n * will be minted by that external party..\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(\"{{chainName}}\");\n * const contract = await sdk.getContract(\"{{contract_address}}\", \"signature-drop\");\n * ```\n *\n * @internal\n * @deprecated use contract.erc721 instead\n */\nclass SignatureDrop extends _erc_721_standard_4c4125d2_browser_esm_js__WEBPACK_IMPORTED_MODULE_5__.S {\n  static contractRoles = _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.dG;\n\n  /**\n   * @internal\n   */\n\n  /**\n   * Configure royalties\n   * @remarks Set your own royalties for the entire contract or per token\n   * @example\n   * ```javascript\n   * // royalties on the whole contract\n   * contract.royalties.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1%\n   *   fee_recipient: \"0x...\"\n   * });\n   * // override royalty for a particular token\n   * contract.royalties.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 500, // 5%\n   *   fee_recipient: \"0x...\"\n   * });\n   * ```\n   */\n\n  /**\n   * Configure claim conditions\n   * @remarks Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const claimCondition = {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxClaimableSupply: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   * };\n   * await contract.claimConditions.set([claimCondition]);\n   * ```\n   */\n\n  /**\n   * Delayed reveal\n   * @remarks Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @example\n   * ```javascript\n   * // the real NFTs, these will be encrypted until you reveal them\n   * const realNFTs = [{\n   *   name: \"Common NFT #1\",\n   *   description: \"Common NFT, one of many.\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }, {\n   *   name: \"Super Rare NFT #2\",\n   *   description: \"You got a Super Rare NFT!\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   * // A placeholder NFT that people will get immediately in their wallet, and will be converted to the real NFT at reveal time\n   * const placeholderNFT = {\n   *   name: \"Hidden NFT\",\n   *   description: \"Will be revealed next week!\"\n   * };\n   * // Create and encrypt the NFTs\n   * await contract.revealer.createDelayedRevealBatch(\n   *   placeholderNFT,\n   *   realNFTs,\n   *   \"my secret password\",\n   * );\n   * // Whenever you're ready, reveal your NFTs at any time\n   * const batchId = 0; // the batch to reveal\n   * await contract.revealer.reveal(batchId, \"my secret password\");\n   * ```\n   */\n\n  /**\n   * Signature Minting\n   * @remarks Generate dynamic NFTs with your own signature, and let others mint them using that signature.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.signature.generate()` documentation\n   * const signedPayload = contract.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   */\n\n  /**\n   * Checkout\n   * @remarks Create a FIAT currency checkout for your NFT drop.\n   */\n\n  constructor(network, address, storage) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let abi = arguments.length > 4 ? arguments[4] : undefined;\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.cs(network, address, abi, options, storage);\n    super(contractWrapper, storage, chainId);\n    this.abi = _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.bj.parse(abi || []);\n    this.metadata = new _contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.C(this.contractWrapper, _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.bT, this.storage);\n    this.app = new _contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.b(this.contractWrapper, this.metadata, this.storage);\n    this.roles = new _contract_roles_71988d2e_browser_esm_js__WEBPACK_IMPORTED_MODULE_8__.C(this.contractWrapper, SignatureDrop.contractRoles);\n    this.royalties = new _contract_owner_49e75547_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.C(this.contractWrapper, this.metadata);\n    this.sales = new _contract_sales_918c7cb8_browser_esm_js__WEBPACK_IMPORTED_MODULE_10__.C(this.contractWrapper);\n    this.encoder = new _fetchCurrencyValue_32d08b05_browser_esm_js__WEBPACK_IMPORTED_MODULE_11__.C(this.contractWrapper);\n    this.estimator = new _contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.G(this.contractWrapper);\n    this.events = new _contract_appuri_5c40af52_browser_esm_js__WEBPACK_IMPORTED_MODULE_7__.a(this.contractWrapper);\n    this.platformFees = new _contract_platform_fee_e756e68f_browser_esm_js__WEBPACK_IMPORTED_MODULE_12__.C(this.contractWrapper);\n    this.interceptor = new _contract_interceptor_d7b164a7_browser_esm_js__WEBPACK_IMPORTED_MODULE_13__.C(this.contractWrapper);\n    this.claimConditions = new _drop_claim_conditions_e6f2abbf_browser_esm_js__WEBPACK_IMPORTED_MODULE_14__.D(this.contractWrapper, this.metadata, this.storage);\n    this.signature = new _erc_721_27306550_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.a(this.contractWrapper, this.storage);\n    this.revealer = new _contract_owner_49e75547_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.D(this.contractWrapper, this.storage, _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.cQ.name, () => this.erc721.nextTokenIdToMint());\n    this.signature = new _erc_721_27306550_browser_esm_js__WEBPACK_IMPORTED_MODULE_15__.a(this.contractWrapper, this.storage);\n    this.owner = new _contract_owner_49e75547_browser_esm_js__WEBPACK_IMPORTED_MODULE_9__.a(this.contractWrapper);\n    this.checkout = new _thirdweb_checkout_f6974aaf_browser_esm_js__WEBPACK_IMPORTED_MODULE_16__.P(this.contractWrapper);\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get the total count NFTs in this drop contract, both claimed and unclaimed\n   */\n  async totalSupply() {\n    const [claimed, unclaimed] = await Promise.all([this.totalClaimedSupply(), this.totalUnclaimedSupply()]);\n    return claimed.add(unclaimed);\n  }\n\n  /**\n   * Get All Claimed NFTs\n   *\n   * @remarks Fetch all the NFTs (and their owners) that have been claimed in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const claimedNFTs = await contract.getAllClaimed();\n   * const firstOwner = claimedNFTs[0].owner;\n   * ```\n   *\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata and their ownersfor all NFTs queried.\n   */\n  async getAllClaimed(queryParams) {\n    const start = ethers__WEBPACK_IMPORTED_MODULE_17__.BigNumber.from(queryParams?.start || 0).toNumber();\n    const count = ethers__WEBPACK_IMPORTED_MODULE_17__.BigNumber.from(queryParams?.count || _QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.D).toNumber();\n    const maxId = Math.min((await this.totalClaimedSupply()).toNumber(), start + count);\n    return await Promise.all(Array.from(Array(maxId).keys()).map(i => this.get(i.toString())));\n  }\n\n  /**\n   * Get All Unclaimed NFTs\n   *\n   * @remarks Fetch all the NFTs that have been not been claimed yet in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const unclaimedNFTs = await contract.getAllUnclaimed();\n   * const firstUnclaimedNFT = unclaimedNFTs[0].name;\n   * ```\n   *\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async getAllUnclaimed(queryParams) {\n    const start = ethers__WEBPACK_IMPORTED_MODULE_17__.BigNumber.from(queryParams?.start || 0).toNumber();\n    const count = ethers__WEBPACK_IMPORTED_MODULE_17__.BigNumber.from(queryParams?.count || _QueryParams_32a56510_browser_esm_js__WEBPACK_IMPORTED_MODULE_18__.D).toNumber();\n    const firstTokenId = ethers__WEBPACK_IMPORTED_MODULE_17__.BigNumber.from(Math.max((await this.totalClaimedSupply()).toNumber(), start));\n    const maxId = ethers__WEBPACK_IMPORTED_MODULE_17__.BigNumber.from(Math.min((await this.contractWrapper.read(\"nextTokenIdToMint\", [])).toNumber(), firstTokenId.toNumber() + count));\n    return await Promise.all(Array.from(Array(maxId.sub(firstTokenId).toNumber()).keys()).map(i => this.erc721.getTokenMetadata(firstTokenId.add(i).toString())));\n  }\n\n  /**\n   * Get the claimed supply\n   *\n   * @remarks Get the number of claimed NFTs in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const claimedNFTCount = await contract.totalClaimedSupply();\n   * console.log(`NFTs claimed so far: ${claimedNFTCount}`);\n   * ```\n   * @returns The claimed supply\n   */\n  async totalClaimedSupply() {\n    return this.erc721.totalClaimedSupply();\n  }\n\n  /**\n   * Get the unclaimed supply\n   *\n   * @remarks Get the number of unclaimed NFTs in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const unclaimedNFTCount = await contract.totalUnclaimedSupply();\n   * console.log(`NFTs left to claim: ${unclaimedNFTCount}`);\n   * ```\n   * @returns The unclaimed supply\n   */\n  async totalUnclaimedSupply() {\n    return this.erc721.totalUnclaimedSupply();\n  }\n\n  /**\n   * Get whether users can transfer NFTs from this contract\n   */\n  async isTransferRestricted() {\n    const anyoneCanTransfer = await this.contractWrapper.read(\"hasRole\", [(0,_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_6__.H)(\"transfer\"), ethers__WEBPACK_IMPORTED_MODULE_17__.constants.AddressZero]);\n    return !anyoneCanTransfer;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create a batch of unique NFTs to be claimed in the future\n   *\n   * @remarks Create batch allows you to create a batch of many unique NFTs in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFTs to create\n   * const metadatas = [{\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   *\n   * const results = await contract.createBatch(metadatas); // uploads and creates the NFTs on chain\n   * const firstTokenId = results[0].id; // token id of the first created NFT\n   * const firstNFT = await results[0].data(); // (optional) fetch details of the first created NFT\n   * ```\n   *\n   * @param metadatas - The metadata to include in the batch.\n   * @param options - optional upload progress callback\n   */\n  createBatch = /* @__PURE__ */(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__.f)(async (metadatas, options) => {\n    return this.erc721.lazyMint.prepare(metadatas, options);\n  });\n\n  /**\n   * Construct a claim transaction without executing it.\n   * This is useful for estimating the gas cost of a claim transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param destinationAddress - Address you want to send the token to\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   *\n   * @deprecated Use `contract.erc721.claim.prepare(...args)` instead\n   */\n  async getClaimTransaction(destinationAddress, quantity, options) {\n    return this.erc721.getClaimTransaction(destinationAddress, quantity, options);\n  }\n\n  /**\n   * Claim unique NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const quantity = 1; // how many unique NFTs you want to claim\n   *\n   * const tx = await contract.claimTo(address, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const claimedTokenId = tx.id; // the id of the NFT claimed\n   * const claimedNFT = await tx.data(); // (optional) get the claimed NFT metadata\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   *\n   * @returns  an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   */\n  claimTo = /* @__PURE__ */(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__.f)(async (destinationAddress, quantity, options) => {\n    return this.erc721.claimTo.prepare(destinationAddress, quantity, options);\n  });\n\n  /**\n   * Claim NFTs to the connected wallet.\n   *\n   * @remarks See {@link NFTDrop.claimTo}\n   *\n   * @returns  an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   */\n  claim = /* @__PURE__ */(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__.f)(async (quantity, options) => {\n    return this.erc721.claim.prepare(quantity, options);\n  });\n\n  /**\n   * Burn a single NFT\n   * @param tokenId - the token Id to burn\n   * @example\n   * ```javascript\n   * const result = await contract.burnToken(tokenId);\n   * ```\n   */\n  burn = /* @__PURE__ */(0,_transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__.f)(async tokenId => {\n    return this.erc721.burn.prepare(tokenId);\n  });\n\n  /**\n   * @internal\n   */\n  async prepare(method, args, overrides) {\n    return _transactions_72f9603c_browser_esm_js__WEBPACK_IMPORTED_MODULE_19__.T.fromContractWrapper({\n      contractWrapper: this.contractWrapper,\n      method,\n      args,\n      overrides\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName, args, overrides) {\n    return this.contractWrapper.call(functionName, args, overrides);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/sdk/dist/signature-drop-266c8004.browser.esm.js\n"));

/***/ }),

/***/ "./node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-f6974aaf.browser.esm.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-f6974aaf.browser.esm.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"P\": function() { return /* binding */ PaperCheckout; }\n/* harmony export */ });\n/* harmony import */ var _index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-33cd3415.browser.esm.js */ \"./node_modules/@thirdweb-dev/sdk/dist/index-33cd3415.browser.esm.js\");\n/* harmony import */ var tiny_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/esm/tiny-invariant.js\");\n\n\n\nconst PAPER_API_BASE = `https://paper.xyz/api`;\nconst PAPER_API_VERSION = `2022-08-12`;\n\n/**\n * @internal\n */\nconst PAPER_API_URL = `${PAPER_API_BASE}/${PAPER_API_VERSION}/platform/thirdweb`;\nconst PAPER_CHAIN_ID_MAP = {\n  [_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Mainnet]: \"Ethereum\",\n  [_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Goerli]: \"Goerli\",\n  [_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Polygon]: \"Polygon\",\n  [_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Mumbai]: \"Mumbai\",\n  [_index_33cd3415_browser_esm_js__WEBPACK_IMPORTED_MODULE_1__.aS.Avalanche]: \"Avalanche\"\n};\n\n/**\n * @internal\n */\nfunction parseChainIdToPaperChain(chainId) {\n  (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(chainId in PAPER_CHAIN_ID_MAP, `chainId not supported by paper: ${chainId}`);\n  return PAPER_CHAIN_ID_MAP[chainId];\n}\n/**\n *\n * @param contractAddress - the contract address\n * @param chainId - the chain id\n * @internal\n * @returns The paper xyz contract id\n * @throws if the contract is not registered on paper xyz\n */\nasync function fetchRegisteredCheckoutId(contractAddress, chainId) {\n  const paperChain = parseChainIdToPaperChain(chainId);\n  const res = await fetch(`${PAPER_API_URL}/register-contract?contractAddress=${contractAddress}&chain=${paperChain}`);\n  const json = await res.json();\n  (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(json.result.id, \"Contract is not registered with paper\");\n  return json.result.id;\n}\n\n/**\n * The parameters for creating a paper.xyz checkout link.\n * @public\n */\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\n\nconst DEFAULT_PARAMS = {\n  expiresInMinutes: 15,\n  feeBearer: \"BUYER\",\n  sendEmailOnSuccess: true,\n  redirectAfterPayment: false\n};\n\n/**\n * @internal\n */\nasync function createCheckoutLinkIntent(contractId, params) {\n  const res = await fetch(`${PAPER_API_URL}/checkout-link-intent`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      contractId,\n      ...DEFAULT_PARAMS,\n      ...params,\n      metadata: {\n        ...params.metadata,\n        via_platform: \"thirdweb\"\n      },\n      // overrides that are hard coded\n      hideNativeMint: true,\n      hidePaperWallet: !!params.walletAddress,\n      hideExternalWallet: true,\n      hidePayWithCrypto: true,\n      usePaperKey: false\n    })\n  });\n  const json = await res.json();\n  (0,tiny_invariant__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(json.checkoutLinkIntentUrl, \"Failed to create checkout link intent\");\n  return json.checkoutLinkIntentUrl;\n}\n\n/**\n * @internal\n */\nclass PaperCheckout {\n  constructor(contractWrapper) {\n    this.contractWrapper = contractWrapper;\n  }\n  async getCheckoutId() {\n    return fetchRegisteredCheckoutId(this.contractWrapper.address, await this.contractWrapper.getChainID());\n  }\n  async isEnabled() {\n    try {\n      return !!(await this.getCheckoutId());\n    } catch (err) {\n      return false;\n    }\n  }\n  async createLinkIntent(params) {\n    return await createCheckoutLinkIntent(await this.getCheckoutId(), params);\n  }\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRoaXJkd2ViLWRldi9zZGsvZGlzdC90aGlyZHdlYi1jaGVja291dC1mNjk3NGFhZi5icm93c2VyLmVzbS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0U7QUFDekI7O0FBRXZDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGVBQWUsR0FBRyxrQkFBa0I7QUFDN0Q7QUFDQSxHQUFHLHNFQUFlO0FBQ2xCLEdBQUcscUVBQWM7QUFDakIsR0FBRyxzRUFBZTtBQUNsQixHQUFHLHFFQUFjO0FBQ2pCLEdBQUcsd0VBQWlCO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSwwREFBUyxtRUFBbUUsUUFBUTtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsY0FBYyxxQ0FBcUMsZ0JBQWdCLFNBQVMsV0FBVztBQUNwSDtBQUNBLEVBQUUsMERBQVM7QUFDWDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGNBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQSxFQUFFLDBEQUFTO0FBQ1g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFOEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B0aGlyZHdlYi1kZXYvc2RrL2Rpc3QvdGhpcmR3ZWItY2hlY2tvdXQtZjY5NzRhYWYuYnJvd3Nlci5lc20uanM/NDg5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhUyBhcyBDaGFpbklkIH0gZnJvbSAnLi9pbmRleC0zM2NkMzQxNS5icm93c2VyLmVzbS5qcyc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ3RpbnktaW52YXJpYW50JztcblxuY29uc3QgUEFQRVJfQVBJX0JBU0UgPSBgaHR0cHM6Ly9wYXBlci54eXovYXBpYDtcbmNvbnN0IFBBUEVSX0FQSV9WRVJTSU9OID0gYDIwMjItMDgtMTJgO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCBQQVBFUl9BUElfVVJMID0gYCR7UEFQRVJfQVBJX0JBU0V9LyR7UEFQRVJfQVBJX1ZFUlNJT059L3BsYXRmb3JtL3RoaXJkd2ViYDtcbmNvbnN0IFBBUEVSX0NIQUlOX0lEX01BUCA9IHtcbiAgW0NoYWluSWQuTWFpbm5ldF06IFwiRXRoZXJldW1cIixcbiAgW0NoYWluSWQuR29lcmxpXTogXCJHb2VybGlcIixcbiAgW0NoYWluSWQuUG9seWdvbl06IFwiUG9seWdvblwiLFxuICBbQ2hhaW5JZC5NdW1iYWldOiBcIk11bWJhaVwiLFxuICBbQ2hhaW5JZC5BdmFsYW5jaGVdOiBcIkF2YWxhbmNoZVwiXG59O1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5mdW5jdGlvbiBwYXJzZUNoYWluSWRUb1BhcGVyQ2hhaW4oY2hhaW5JZCkge1xuICBpbnZhcmlhbnQoY2hhaW5JZCBpbiBQQVBFUl9DSEFJTl9JRF9NQVAsIGBjaGFpbklkIG5vdCBzdXBwb3J0ZWQgYnkgcGFwZXI6ICR7Y2hhaW5JZH1gKTtcbiAgcmV0dXJuIFBBUEVSX0NIQUlOX0lEX01BUFtjaGFpbklkXTtcbn1cbi8qKlxuICpcbiAqIEBwYXJhbSBjb250cmFjdEFkZHJlc3MgLSB0aGUgY29udHJhY3QgYWRkcmVzc1xuICogQHBhcmFtIGNoYWluSWQgLSB0aGUgY2hhaW4gaWRcbiAqIEBpbnRlcm5hbFxuICogQHJldHVybnMgVGhlIHBhcGVyIHh5eiBjb250cmFjdCBpZFxuICogQHRocm93cyBpZiB0aGUgY29udHJhY3QgaXMgbm90IHJlZ2lzdGVyZWQgb24gcGFwZXIgeHl6XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGZldGNoUmVnaXN0ZXJlZENoZWNrb3V0SWQoY29udHJhY3RBZGRyZXNzLCBjaGFpbklkKSB7XG4gIGNvbnN0IHBhcGVyQ2hhaW4gPSBwYXJzZUNoYWluSWRUb1BhcGVyQ2hhaW4oY2hhaW5JZCk7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGAke1BBUEVSX0FQSV9VUkx9L3JlZ2lzdGVyLWNvbnRyYWN0P2NvbnRyYWN0QWRkcmVzcz0ke2NvbnRyYWN0QWRkcmVzc30mY2hhaW49JHtwYXBlckNoYWlufWApO1xuICBjb25zdCBqc29uID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgaW52YXJpYW50KGpzb24ucmVzdWx0LmlkLCBcIkNvbnRyYWN0IGlzIG5vdCByZWdpc3RlcmVkIHdpdGggcGFwZXJcIik7XG4gIHJldHVybiBqc29uLnJlc3VsdC5pZDtcbn1cblxuLyoqXG4gKiBUaGUgcGFyYW1ldGVycyBmb3IgY3JlYXRpbmcgYSBwYXBlci54eXogY2hlY2tvdXQgbGluay5cbiAqIEBwdWJsaWNcbiAqL1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cblxuY29uc3QgREVGQVVMVF9QQVJBTVMgPSB7XG4gIGV4cGlyZXNJbk1pbnV0ZXM6IDE1LFxuICBmZWVCZWFyZXI6IFwiQlVZRVJcIixcbiAgc2VuZEVtYWlsT25TdWNjZXNzOiB0cnVlLFxuICByZWRpcmVjdEFmdGVyUGF5bWVudDogZmFsc2Vcbn07XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNoZWNrb3V0TGlua0ludGVudChjb250cmFjdElkLCBwYXJhbXMpIHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYCR7UEFQRVJfQVBJX1VSTH0vY2hlY2tvdXQtbGluay1pbnRlbnRgLCB7XG4gICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgY29udHJhY3RJZCxcbiAgICAgIC4uLkRFRkFVTFRfUEFSQU1TLFxuICAgICAgLi4ucGFyYW1zLFxuICAgICAgbWV0YWRhdGE6IHtcbiAgICAgICAgLi4ucGFyYW1zLm1ldGFkYXRhLFxuICAgICAgICB2aWFfcGxhdGZvcm06IFwidGhpcmR3ZWJcIlxuICAgICAgfSxcbiAgICAgIC8vIG92ZXJyaWRlcyB0aGF0IGFyZSBoYXJkIGNvZGVkXG4gICAgICBoaWRlTmF0aXZlTWludDogdHJ1ZSxcbiAgICAgIGhpZGVQYXBlcldhbGxldDogISFwYXJhbXMud2FsbGV0QWRkcmVzcyxcbiAgICAgIGhpZGVFeHRlcm5hbFdhbGxldDogdHJ1ZSxcbiAgICAgIGhpZGVQYXlXaXRoQ3J5cHRvOiB0cnVlLFxuICAgICAgdXNlUGFwZXJLZXk6IGZhbHNlXG4gICAgfSlcbiAgfSk7XG4gIGNvbnN0IGpzb24gPSBhd2FpdCByZXMuanNvbigpO1xuICBpbnZhcmlhbnQoanNvbi5jaGVja291dExpbmtJbnRlbnRVcmwsIFwiRmFpbGVkIHRvIGNyZWF0ZSBjaGVja291dCBsaW5rIGludGVudFwiKTtcbiAgcmV0dXJuIGpzb24uY2hlY2tvdXRMaW5rSW50ZW50VXJsO1xufVxuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5jbGFzcyBQYXBlckNoZWNrb3V0IHtcbiAgY29uc3RydWN0b3IoY29udHJhY3RXcmFwcGVyKSB7XG4gICAgdGhpcy5jb250cmFjdFdyYXBwZXIgPSBjb250cmFjdFdyYXBwZXI7XG4gIH1cbiAgYXN5bmMgZ2V0Q2hlY2tvdXRJZCgpIHtcbiAgICByZXR1cm4gZmV0Y2hSZWdpc3RlcmVkQ2hlY2tvdXRJZCh0aGlzLmNvbnRyYWN0V3JhcHBlci5hZGRyZXNzLCBhd2FpdCB0aGlzLmNvbnRyYWN0V3JhcHBlci5nZXRDaGFpbklEKCkpO1xuICB9XG4gIGFzeW5jIGlzRW5hYmxlZCgpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuICEhKGF3YWl0IHRoaXMuZ2V0Q2hlY2tvdXRJZCgpKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgYXN5bmMgY3JlYXRlTGlua0ludGVudChwYXJhbXMpIHtcbiAgICByZXR1cm4gYXdhaXQgY3JlYXRlQ2hlY2tvdXRMaW5rSW50ZW50KGF3YWl0IHRoaXMuZ2V0Q2hlY2tvdXRJZCgpLCBwYXJhbXMpO1xuICB9XG59XG5cbmV4cG9ydCB7IFBhcGVyQ2hlY2tvdXQgYXMgUCB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@thirdweb-dev/sdk/dist/thirdweb-checkout-f6974aaf.browser.esm.js\n"));

/***/ })

}]);